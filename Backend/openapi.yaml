openapi: 3.1.0
info:
  title: Vasto Supermarket API
  description: API documentation for the Vasto Supermarket backend
  version: 1.0.0
  servers:
  # - url: 'https://api.vasto.supermarket/dev'  # Development URL
  #   description: Development server (for debugging and testing)
  # - url: 'https://api.vasto.supermarket/prod'  # Production URL
  #   description: Production server (for live environment)
paths:
  /api/v1/user/register:
    post:
      tags:
        - User
      summary: Register a new user
      description: Registers a new user by accepting email, password, and other details. Ensures that the user is not already registered.
      operationId: registerUser
      requestBody:
        description: User registration details
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The user's email address
                  example: "user@example.com"
                password:
                  type: string
                  description: The user's password
                  example: "password123"
                confirmPassword:
                  type: string
                  description: The user's password confirmation (same as password)
                  example: "password123"
                name:
                  type: string
                  description: The user's full name
                  example: "John Doe"
              required:
                - email
                - password
                - confirmPassword
                - name
      responses:
        '200':
          description: Successfully registered user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "You registered successfully"
        '409':
          description: User already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User already registered"
        '400':
          description: Validation error or password mismatch
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Passwords do not match"

  /api/v1/user/login:
    post:
      tags:
        - User
      summary: User login
      description: Authenticates a user with email and password, generates access and refresh tokens.
      operationId: userLogin
      requestBody:
        description: User login credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The user's email address
                  example: "user@example.com"
                password:
                  type: string
                  description: The user's password
                  example: "password123"
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login and token generation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Welcome back John Doe"
                  user:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: The user's unique ID
                        example: "60b6b0e8f3a5f127e45f5b3b"
                      name:
                        type: string
                        description: The user's name
                        example: "John Doe"
                      email:
                        type: string
                        description: The user's email address
                        example: "user@example.com"
                      lastLoginDate:
                        type: string
                        format: date-time
                        description: The date when the user last logged in
                        example: "2025-02-22T10:00:00Z"
        '401':
          description: Invalid credentials, either email or password is incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid credentials"
        '403':
          description: The user is blocked by the admin.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "You are blocked by admin"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/v1/user/logout:
    post:
      tags:
        - User
      summary: User logout
      description: Logs the user out by clearing their access and refresh tokens.
      operationId: userLogout
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logged out successfully"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /api/v1/user/refresh-token:
    post:
      tags:
        - User
      summary: Refreshes the user's access token
      description: |
        Accepts a refresh token and returns a new access token if the refresh token is valid.
        Ensures the token is not expired or invalid.
      operationId: refreshToken
      requestBody:
        description: The refresh token for generating a new access token
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: The user's refresh token (can also be provided as a bearer token in the header)
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NTg5NzQyMTI4OTMxMzMwMjA4NzkiLCJpYXQiOjE2NzU4NTExMzgsImV4cCI6MTY3NTg1NDczOH0.LC_fEgFlqZTqN3yZA0zm6cXygXYdUls45bc0zm37cYI"
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Access Token refreshed successfully"
        '401':
          description: Unauthorized or invalid/expired refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized or invalid refresh token"
        '400':
          description: Bad request (invalid token format or missing refresh token)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid token format or missing refresh token"

  /api/v1/category:
    post:
      tags:
        - Category
      summary: Add a new category
      description: |
        This endpoint allows the creation of a new category. The request body should contain the category's name, description, and an image file.
        In development, error responses will provide more verbose details.
      operationId: addCategory
      requestBody:
        description: Category details for creation
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the category
                  example: "Electronics"
                description:
                  type: string
                  description: A description of the category
                  example: "Devices and gadgets for everyday use."
                image:
                  type: string
                  format: binary
                  description: The image associated with the category
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Category created successfully"
        '400':
          description: Bad request due to missing or invalid data (e.g., missing image or category already exists)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Image is required"
        '409':
          description: Category already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Category already exists"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"

    get:
      tags:
        - Category
      summary: Get all categories
      description: Fetches all categories available in the system.
      operationId: getAllCategories
      responses:
        '200':
          description: Successfully fetched categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: The unique identifier of the category
                          example: "60b6b0e8f3a5f127e45f5b3b"
                        name:
                          type: string
                          description: The name of the category
                          example: "Electronics"
                        description:
                          type: string
                          description: The description of the category
                          example: "Devices and gadgets for everyday use."
        '404':
          description: No categories found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No categories found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"
                    
  /api/v1/category/{id}:
    patch:
      tags:
        - Category
      summary: Update an existing category
      description: |
        This endpoint allows updating an existing category's name, description, and image file.
        In development, error responses will provide more verbose details.
      operationId: updateCategory
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the category to update.
          schema:
            type: string
      requestBody:
        description: The updated category details
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the category
                  example: "Electronics"
                description:
                  type: string
                  description: A new description for the category
                  example: "Devices and gadgets for everyday use."
                image:
                  type: string
                  format: binary
                  description: An image file associated with the category
      responses:
        '200':
          description: Category updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Category updated successfully"
        '400':
          description: Bad request (invalid data or missing parameters)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid data provided"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"

    delete:
      tags:
        - Category
      summary: Delete an existing category
      description: |
        This endpoint allows deleting a category by its ID.
        In development, error responses will provide more verbose details.
      operationId: deleteCategory
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the category to delete.
          schema:
            type: string
      responses:
        '200':
          description: Category deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Category deleted successfully"
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Category not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"
                    
  /api/v1/sub-category:
    post:
      tags:
        - Sub-category
      summary: Add a new sub-category
      description: |
        This endpoint allows the creation of a new sub-category. The request body should contain the sub-category's name, associated category, and an image file.
        In development, error responses will provide more verbose details.
      operationId: addSubCategory
      requestBody:
        description: Sub-category details for creation
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the sub-category
                  example: "Smartphones"
                category:
                  type: array
                  items:
                    type: string
                  description: A list of category IDs associated with this sub-category
                  example: ["60b6b0e8f3a5f127e45f5b3b"]
                image:
                  type: string
                  format: binary
                  description: An image file associated with the sub-category
      responses:
        '201':
          description: Sub-category created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Sub category added successfully"
        '400':
          description: Bad request due to missing or invalid data (e.g., missing image, sub-category already exists)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Image is required"  # Or "Sub Category already exists"
        '500':
          description: Internal server error (e.g., failed to upload image to Cloudinary)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Failed to upload image to Cloudinary"  # Or "Internal server error"

    get:
      tags:
        - Sub-category
      summary: Get all sub-categories
      description: Fetches all sub-categories available in the system.
      operationId: getAllSubCategories
      responses:
        '200':
          description: Successfully fetched sub-categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: The unique identifier of the sub-category
                          example: "60b6b0e8f3a5f127e45f5b3b"
                        name:
                          type: string
                          description: The name of the sub-category
                          example: "Smartphones"
                        category:
                          type: array
                          items:
                            type: string
                          description: A list of category IDs associated with this sub-category
                          example: ["60b6b0e8f3a5f127e45f5b3b"]
                        image:
                          type: string
                          description: URL of the image associated with the sub-category
                          example: "https://res.cloudinary.com/example-url.jpg"
        '404':
          description: No sub-categories found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No sub-categories found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"

  /api/v1/sub-category/{id}:
    get:
      tags:
        - Sub-category
      summary: Get subcategories by category ID
      description: Retrieve all subcategories associated with a specific category ID.
      operationId: getSubCategoriesByCategoryId
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the category whose subcategories you want to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved subcategories
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  numberOfSubCategories:
                    type: integer
                    example: 3
                  subCategories:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "65a1b2c3d4e5f67890123456"
                        name:
                          type: string
                          example: "Smartphones"
                        category:
                          type: string
                          example: "60b6b0e8f3a5f127e45f5b3b"
                        image:
                          type: string
                          example: "https://example.com/sub-category-image.jpg"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2024-03-08T10:15:30.000Z"
        '404':
          description: No subcategories found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No subcategories found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"
    patch:
      tags:
        - Sub-category
      summary: Update an existing sub-category
      description: |
        This endpoint allows updating an existing sub-category's name, associated categories, and image file.
        In development, error responses will provide more verbose details.
      operationId: updateSubCategory
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the sub-category to update.
          schema:
            type: string
      requestBody:
        description: The updated sub-category details
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the sub-category
                  example: "Smartphones"
                category:
                  type: array
                  items:
                    type: string
                  description: A list of category IDs to associate with the sub-category
                  example: ["60b6b0e8f3a5f127e45f5b3b"]
                image:
                  type: string
                  format: binary
                  description: The new image associated with the sub-category
      responses:
        '200':
          description: Sub-category updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Sub category updated successfully"
        '400':
          description: Bad request (e.g., missing image, sub-category not updated)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Image is required"  # Or "Sub category not updated"
        '404':
          description: Sub-category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Category not found"
        '500':
          description: Internal server error (e.g., failed to upload image to Cloudinary)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Failed to upload image to Cloudinary"  # Or "Internal server error"
    delete:
      tags:
        - Sub-category
      summary: Delete an existing sub-category
      description: |
        This endpoint allows the deletion of an existing sub-category. The sub-category cannot be deleted if it's associated with any products.
      operationId: deleteSubCategory
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the sub-category to delete.
          schema:
            type: string
      responses:
        '200':
          description: Sub-category deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Sub category deleted successfully"
        '400':
          description: Sub-category cannot be deleted because it is associated with products
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Category cannot be deleted as it is associated with subcategories or products"
        '404':
          description: Sub-category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Sub-category not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"

  /api/v1/product:
    post:
      tags:
        - Product
      summary: Create a new product
      description: |
        This endpoint allows creating a new product with associated categories, sub-categories, images, and other product details.
      operationId: createProduct
      requestBody:
        description: The details of the product to create
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the product
                  example: "iPhone 15"
                description:
                  type: string
                  description: A detailed description of the product
                  example: "The latest iPhone model with enhanced features."
                category:
                  type: array
                  items:
                    type: string
                  description: A list of category IDs to associate with the product
                  example: ["60b6b0e8f3a5f127e45f5b3b"]
                subCategory:
                  type: array
                  items:
                    type: string
                  description: A list of sub-category IDs to associate with the product
                  example: ["60b6b0e8f3a5f127e45f5b4c"]
                price:
                  type: number
                  description: The price of the product
                  example: 999.99
                discount:
                  type: number
                  description: The discount percentage on the product
                  example: 10
                unit:
                  type: string
                  description: The unit of measurement for the product
                  example: "piece"
                stock:
                  type: number
                  description: The quantity of the product in stock
                  example: 100
                published:
                  type: boolean
                  description: Whether the product is published and available for sale
                  example: true
                moreDetails:
                  type: object
                  additionalProperties:
                    type: string
                  description: Additional details about the product (optional)
                  example: {"color": "red", "weight": "200g"}
                image:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Product images to be uploaded
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Product created successfully"
        '400':
          description: Bad request (e.g., no images uploaded, missing required fields)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No images uploaded"  # Or "Product not created"
        '500':
          description: Internal server error (e.g., failed to upload images to Cloudinary)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Failed to upload image to Cloudinary"  # Or "Internal server error"
    get:
      tags:
        - Product
      summary: Get all products
      description: |
        This endpoint retrieves all products from the database, sorted by creation date in descending order.
      operationId: getAllProducts
      responses:
        '200':
          description: Successfully retrieved the list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: The product's unique identifier
                          example: "60b6b0e8f3a5f127e45f5b3b"
                        name:
                          type: string
                          description: The name of the product
                          example: "iPhone 15"
                        description:
                          type: string
                          description: A brief description of the product
                          example: "The latest iPhone model with enhanced features."
                        price:
                          type: number
                          description: The price of the product
                          example: 999.99
                        discount:
                          type: number
                          description: The discount percentage on the product
                          example: 10
                        unit:
                          type: string
                          description: The unit of measurement for the product
                          example: "piece"
                        stock:
                          type: number
                          description: The quantity of the product in stock
                          example: 100
                        published:
                          type: boolean
                          description: Whether the product is published and available for sale
                          example: true
                        imageUrl:
                          type: array
                          items:
                            type: string
                          description: The URLs of the product images
                          example: ["https://cloudinary.com/path/to/image.jpg"]
        '404':
          description: No products found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No product found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"

  /api/v1/product/{id}:
    get:
      tags:
        - Product
      summary: Get a specific product by ID
      description: |
        This endpoint retrieves a single product based on its unique identifier (ID).
      operationId: getProduct
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the product
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  product:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: The product's unique identifier
                        example: "60b6b0e8f3a5f127e45f5b3b"
                      name:
                        type: string
                        description: The name of the product
                        example: "iPhone 15"
                      description:
                        type: string
                        description: A brief description of the product
                        example: "The latest iPhone model with enhanced features."
                      price:
                        type: number
                        description: The price of the product
                        example: 999.99
                      discount:
                        type: number
                        description: The discount percentage on the product
                        example: 10
                      unit:
                        type: string
                        description: The unit of measurement for the product
                        example: "piece"
                      stock:
                        type: number
                        description: The quantity of the product in stock
                        example: 100
                      published:
                        type: boolean
                        description: Whether the product is published and available for sale
                        example: true
                      imageUrl:
                        type: array
                        items:
                          type: string
                        description: The URLs of the product images
                        example: ["https://cloudinary.com/path/to/image.jpg"]
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No product found"
    patch:
      tags:
        - Product
      summary: Update a product by ID
      description: |
        This endpoint updates the details of an existing product. You can update fields such as name, description, price, stock, etc.
        This operation requires authentication.
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product to update.
          schema:
            type: string
      requestBody:
        description: The updated product details
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the product
                  example: "iPhone 15 Pro"
                description:
                  type: string
                  description: The new description of the product
                  example: "The latest iPhone model with a better camera and more features."
                category:
                  type: array
                  items:
                    type: string
                  description: A list of category IDs to associate with the product
                  example: ["60b6b0e8f3a5f127e45f5b3b"]
                subCategory:
                  type: array
                  items:
                    type: string
                  description: A list of sub-category IDs to associate with the product
                  example: ["60b6b0e8f3a5f127e45f5b4c"]
                price:
                  type: number
                  description: The updated price of the product
                  example: 1099.99
                discount:
                  type: number
                  description: The updated discount percentage
                  example: 15
                unit:
                  type: string
                  description: The unit of measurement for the product
                  example: "piece"
                stock:
                  type: number
                  description: The updated stock quantity
                  example: 80
                published:
                  type: boolean
                  description: Whether the product is published and available for sale
                  example: true
                moreDetails:
                  type: object
                  additionalProperties:
                    type: string
                  description: Additional details about the product (optional)
                  example: {"color": "black", "weight": "210g"}
                image:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Updated product images
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Product updated successfully"
        '400':
          description: Bad request (e.g., missing required fields)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Product not updated"
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No product found"
        '500':
          description: Internal server error (e.g., failed to upload images)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Failed to upload image to Cloudinary"  # Or "Internal server error"
    delete:
      tags:
        - Product
      summary: Delete a product by ID
      description: |
        This endpoint deletes a product based on its unique identifier (ID). Requires authentication.
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product to delete.
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Product deleted successfully"
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No product found"

  /api/v1/product/category/{id}:
    get:
      tags:
        - Product
      summary: Get products by category
      description: |
        This endpoint retrieves a list of products that belong to a specific category.
      operationId: getProductByCategory
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the category to retrieve products for.
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved products in the category
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: The product's unique identifier
                          example: "60b6b0e8f3a5f127e45f5b3b"
                        name:
                          type: string
                          description: The name of the product
                          example: "iPhone 15"
                        description:
                          type: string
                          description: A brief description of the product
                          example: "The latest iPhone model with enhanced features."
                        price:
                          type: number
                          description: The price of the product
                          example: 999.99
                        discount:
                          type: number
                          description: The discount percentage on the product
                          example: 10
                        unit:
                          type: string
                          description: The unit of measurement for the product
                          example: "piece"
                        stock:
                          type: number
                          description: The quantity of the product in stock
                          example: 100
                        published:
                          type: boolean
                          description: Whether the product is published and available for sale
                          example: true
                        imageUrl:
                          type: array
                          items:
                            type: string
                          description: The URLs of the product images
                          example: ["https://cloudinary.com/path/to/image.jpg"]
        '404':
          description: No products found for the given category
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No product found"
  
  /api/v1/product/search:
    get:
      tags:
        - Product
      summary: Search for products
      description: |
        This endpoint allows users to search for products by keyword.
        Supports pagination with `limit` and `page` query parameters.
      operationId: searchProducts
      parameters:
        - name: search
          in: query
          required: true
          description: The search term to filter products.
          schema:
            type: string
            example: "rice"
          allowEmptyValue: false  # Prevent sending an empty search
          style: form
          explode: false
        - name: limit
          in: query
          required: false
          description: The number of products to return per page.
          schema:
            type: integer
            default: 10
            example: 10
        - name: page
          in: query
          required: false
          description: The page number for pagination.
          schema:
            type: integer
            default: 1
            example: 1
      responses:
        '200':
          description: Successfully retrieved the search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: The product's unique identifier
                          example: "60b6b0e8f3a5f127e45f5b3b"
                        name:
                          type: string
                          description: The name of the product
                          example: "Organic Rice"
                        description:
                          type: string
                          description: A brief description of the product
                          example: "High-quality organic rice."
                        price:
                          type: number
                          description: The price of the product
                          example: 5.99
                        discount:
                          type: number
                          description: The discount percentage on the product
                          example: 10
                        unit:
                          type: string
                          description: The unit of measurement for the product
                          example: "kg"
                        stock:
                          type: number
                          description: The quantity of the product in stock
                          example: 150
                        published:
                          type: boolean
                          description: Whether the product is published and available for sale
                          example: true
                        imageUrl:
                          type: array
                          items:
                            type: string
                          description: The URLs of the product images
                          example: ["https://cloudinary.com/path/to/rice.jpg"]
                  productCount:
                    type: integer
                    description: Total number of matching products
                    example: 50
                  totalPages:
                    type: integer
                    description: Total number of pages
                    example: 5
                  page:
                    type: integer
                    description: Current page number
                    example: 1
                  limit:
                    type: integer
                    description: Number of products per page
                    example: 10
        '400':
          description: Bad request, missing search query
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Search query is required"
        '404':
          description: No products found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No product found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An error occurred while searching products"


  /api/v1/product/sub-category/{id}:
    get:
      tags:
        - Product
      summary: Get products by sub-category ID
      description: Retrieve a list of products that belong to a specific sub-category.
      operationId: getProductsBySubCategory
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the sub-category whose products you want to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved products
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  numberOfProducts:
                    type: integer
                    example: 3
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "65a1b2c3d4e5f67890123456"
                        name:
                          type: string
                          example: "iPhone 15 Pro"
                        description:
                          type: string
                          example: "The latest Apple iPhone with advanced camera and design."
                        price:
                          type: number
                          example: 999.99
                        category:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "60b6b0e8f3a5f127e45f5b3b"
                            name:
                              type: string
                              example: "Electronics"
                        subCategory:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "65a8f9b3e123456789abcd01"
                            name:
                              type: string
                              example: "Smartphones"
                        image:
                          type: string
                          example: "https://example.com/product-image.jpg"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2024-03-08T10:15:30.000Z"
        '404':
          description: No products found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No products found for this sub-category"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"
                    
  /order/payment/create-checkout-session:
    post:
      tags:
        - Orders
      summary: Create a Stripe checkout session (Public)
      description: |
        Creates a Stripe checkout session for processing order payments.
        This is a public endpoint accessible without authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: Optional user ID
                  example: "65a8f9b3e123456789abcd01"
                cartItems:
                  type: array
                  minItems: 1
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "65a1b2c3d4e5f67890123456"
                      name:
                        type: string
                        example: "iPhone 15 Pro"
                      slug:
                        type: string
                        example: "iphone-15-pro"
                      imageUrl:
                        type: string
                        format: uri
                        example: "https://example.com/product-image.jpg"
                      unit:
                        type: string
                        example: "piece"
                      stock:
                        type: integer
                        minimum: 0
                        example: 100
                      price:
                        oneOf:
                          - type: string
                            example: "999.99"
                          - type: number
                            example: 999.99
                      quantity:
                        oneOf:
                          - type: string
                            example: "1"
                          - type: integer
                            minimum: 1
                            example: 1
                      discount:
                        type: integer
                        minimum: 0
                        maximum: 100
                        example: 10
                    required:
                      - _id
                      - name
                      - slug
                      - imageUrl
                      - unit
                      - stock
                      - price
                      - quantity
                deliveryDetails:
                  type: object
                  properties:
                    name:
                      type: string
                      minLength: 2
                      example: "John Doe"
                    email:
                      type: string
                      format: email
                      example: "john@example.com"
                    contact:
                      type: string
                      minLength: 8
                      example: "+971501234567"
                    address:
                      type: string
                      minLength: 5
                      example: "123 Main St, Downtown"
                    emirate:
                      type: string
                      example: "Dubai"
                  required:
                    - name
                    - email
                    - contact
                    - address
                    - emirate
                totalAmount:
                  oneOf:
                    - type: string
                      example: "999.99"
                    - type: number
                      example: 999.99
              required:
                - cartItems
                - deliveryDetails
                - totalAmount
      responses:
        '200':
          description: Checkout session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Checkout session created successfully"
                  url:
                    type: string
                    format: uri
                    example: "https://checkout.stripe.com/pay/cs_test_abc123"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid cart items"
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: "cartItems.0.price"
                        message:
                          type: string
                          example: "Price must be non-negative"
        '500':
          description: Error creating checkout session
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error processing payment"

  /order/all:
    get:
      tags:
        - Orders
      summary: Get all orders (Public)
      description: |
        Retrieves all orders with populated product details.
        This is a public endpoint accessible without authentication.
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Orders fetched successfully"
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "65a1b2c3d4e5f67890123456"
                        userId:
                          type: string
                          example: "65a8f9b3e123456789abcd01"
                        products:
                          type: array
                          items:
                            type: object
                            properties:
                              productId:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                    example: "65a1b2c3d4e5f67890123456"
                                  name:
                                    type: string
                                    example: "iPhone 15 Pro"
                                  imageUrl:
                                    type: string
                                    example: "https://example.com/product-image.jpg"
                                  unit:
                                    type: string
                                    example: "piece"
                                  stock:
                                    type: number
                                    example: 100
                                  discount:
                                    type: number
                                    example: 10
                                  price:
                                    type: number
                                    example: 999.99
                              quantity:
                                type: number
                                example: 1
                        deliveryDetails:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "John Doe"
                            email:
                              type: string
                              example: "john@example.com"
                            contact:
                              type: string
                              example: "+971501234567"
                            address:
                              type: string
                              example: "123 Main St, Dubai"
                            emirate:
                              type: string
                              example: "Dubai"
                        totalAmount:
                          type: number
                          example: 999.99
                        paymentStatus:
                          type: string
                          example: "paid"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2024-03-08T10:15:30.000Z"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error"